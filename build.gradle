/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ddevine' at '9/21/14 11:48 PM' with Gradle 2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.1/userguide/tutorial_java_projects.html
 */

buildscript {
   ant.importBuild 'build.xml'
	ext {
		springBootVersion = '1.1.4.RELEASE'
	}
    repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.4.RELEASE")
    }
}
// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot'
//apply plugin: 'war'

jar {
	destinationDir = file('build/jar')

    baseName = 'seyshelles'
    version =  '0.1.0'
	dependsOn classes
    //from sourceSets.main.classes
   // exclude('lib/logback-classic-1.1.2.jar')

}

springBoot {
  mainClass = "fitnesseMain.FitNesseMain"
} 


// In this section you declare where to find the dependencies of your project
repositories {
  
	mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
    maven { url "http://maven.springframework.org/milestone" }
   // flatDir {
    //    dirs 'lib'
    //}

    
}
configurations {
    //providedRuntime
	compile.exclude module: "spring-boot-starter-jetty"
	
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
		output.classesDir = 'bin'
        resources {
            srcDir 'src/resources'
        }
    }
	generated {
	compileClasspath += sourceSets.main.output
	}
}


sourceCompatibility = JavaVersion.VERSION_1_7

targetCompatibility = JavaVersion.VERSION_1_7

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
   compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
   compile fileTree('lib')


    compile("org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}")

    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-aop:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")

    //compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("org.springframework.data:spring-data-rest-webmvc")
    
    //compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    //compile("org.springframework.security.oauth:spring-security-oauth2:2.0.0.RC2")
    //compile("org.springframework.security.oauth:spring-security-oauth2-javaconfig:1.0.0.M1")
    
   
   // providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
	    

    testCompile "junit:junit"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

